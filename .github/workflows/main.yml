name: CI
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  schedule:
    - cron: "0 6 * * *"
jobs:
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        koha-version: [main, stable, oldstable]

    steps:

    - name: Is a tag?
      run: |
        echo "${{ startsWith(github.ref, 'refs/tags/v') }}"

    - name: GitHub Ref 1
      run: |
        echo "${GITHUB_REF##*/}"

    - name: GitHub Ref 2
      run: |
        echo "${{ github.event.ref }}"

    - name: GitHub Ref 3
      run: |
        echo "${{ github.ref }}"

    - name: Dump env
      run: env | sort

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - uses: actions/checkout@v1

    - name: Get Koha Version Branch Name
      id: koha-version
      uses: "bywatersolutions/github-action-koha-get-version-by-label@master"
      with:
        version-label: "${{ matrix.koha-version }}"

    - name: Check out Koha
      run: |
        cd ..
        git clone --branch ${{ steps.koha-version.outputs.current-branch-name }} --single-branch --depth 1 https://github.com/Koha-Community/Koha.git kohaclone
 
  release:
    name: Build & Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: unit_tests
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v1

    - name: Parse out and store the GitHub repository name
      id: myvars
      run: |
        IFS='/' read -r -a parts <<< "$GITHUB_REPOSITORY"
        GITHUB_REPO="${parts[1]}"
        echo ::set-output name=github_repo::$GITHUB_REPO
        echo "GITHUB REPO: $GITHUB_REPO"

        TAG_VERSION="${GITHUB_REF##*/}"
        echo "TAG VERSION: $TAG_VERSION"
        TAG_VERSION="${TAG_VERSION:1}"
        echo "TAG VERSION 2: $TAG_VERSION"
        echo ::set-output name=tag_version::$TAG_VERSION

    - name: Get Koha Version Branch Name
      id: koha-version-oldstable
      uses: "bywatersolutions/github-action-koha-get-version-by-label@master"
      with:
        version-label: "oldstable"

    - name: Print minimum version
      run: |
        echo "Current oldstable version: ${{ steps.koha-version-oldstable.outputs.version-major-minor }}"

    - name: Dump myvars outputs
      env:
        GITHUB_CONTEXT: ${{ toJson(steps.myvars.outputs) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Build Koha Plugin kpz artifact
      id: kpz
      run: |
        docker run -v ${PWD}:/plugin registry.gitlab.com/thekesolutions/tools/koha-plugin-builder
        echo "filename=$(ls *.kpz)" >> $GITHUB_OUTPUT

    - name: See if kpz was created
      run: |
        echo "FILENAME: ${{ steps.kpz.outputs.filename }}"
        ls -alh

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{ steps.kpz.outputs.filename }}
          CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  keepalive:
    name: Keep Alive
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check age and push commit if needed
      run: |
        LAST_COMMIT=$( git --no-pager log -1 --format=%ct )
        NOW=$(date +%s)
        DIFF=$(($NOW-$LAST_COMMIT))
        DAYS=$(($DIFF/86400))
        git config --global user.email kyle@bywatersolutions.com
        git config --global user.name "Kyle M Hall"
        git commit --allow-empty -m "Automated commit from keep alive workflow"
        if [ "$DAYS" -gt "50" ]; then git push; fi
